null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
#null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
null_simulation <- rbinom(100000, size=1, prob=0.5)
alt_simulation <- rbinom(100000, size=1, prob=0.51)
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H0_marginal/H1_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.51, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation))$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation))$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_priors <- beta.select(list(p = 0.5, x = 0.5),
list(p = 0.80, x = 0.55))
alt_priors <- beta.select(list(p = 0.5, x = 0.51),
list(p = 0.80, x = 0.56))
print(null_priors)
print(alt_priors)
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation), shape1 = null_priors[1], shape2=null_priors[2])$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation), shape1=alt_priors[1], shape2=alt_priors[2])$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation), shape1 = null_priors[1], shape2=null_priors[2])$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation), shape1=alt_priors[1], shape2=alt_priors[2])$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
null_simulation <- replicate(100000, rbinom(1, size=1, prob=0.5))
alt_simulation <- replicate(100000, rbinom(1, size=1, prob=0.51))
# null_simulation <- rbinom(100000, size=1, prob=0.5)
# alt_simulation <- rbinom(100000, size=1, prob=0.51))
mean(null_simulation)
mean(alt_simulation)
H0_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(null_simulation), k=sum(null_simulation), shape1 = null_priors[1], shape2=null_priors[2])$value
H1_marginal <- integrate(marginal_llh, lower=0.5, upper=1, n=length(alt_simulation), k=sum(alt_simulation), shape1=alt_priors[1], shape2=alt_priors[2])$value
analytical_bayes <- H1_marginal/H0_marginal
analytical_bayes
fit <- brm(Alternative  ~ 0 + Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(-0.400,0.654),
coef = Intercept)),
iter = 500,
refresh = 0)
summary(fit)
set.seed(123)
p_sim <- rbeta(1000, 35.48, 35.48)
theta_sim <- log(p_sim / (1 - p_sim))
null_logit <- c(mean(theta_sim), sd(theta_sim))
fit <- brm(y  ~ Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(0.01216648,0.23482174),
coef = Intercept)),
iter = 500,
refresh = 0)
fit <- brm(y  ~ 0 + Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(0.01216648,0.23482174),
coef = Intercept)),
iter = 500,
refresh = 0)
fit <- brm(Alternative  ~ 0 + Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(0.01216648,0.23482174),
coef = Intercept)),
iter = 500,
refresh = 0)
summary(fit)
fit <- brm(Alternative  ~  Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(0.01216648,0.23482174),
coef = Intercept)),
iter = 500,
refresh = 0)
fit <- brm(Alternative  ~  0 + Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(0.01216648,0.23482174),
coef = Intercept)),
iter = 500,
refresh = 0)
summary(fit)
fit <- brm(Alternative  ~ 0 + Intercept,
data = data,
family = bernoulli(link = 'probit'),
prior = c(prior(beta(100,100),
coef = Intercept)),
iter = 1000,
refresh = 0)
summary(fit)
fit <- brm(Null  ~ 0 + Intercept,
data = data,
family = bernoulli(link = 'probit'),
prior = c(prior(beta(100,100),
coef = Intercept, lb=0, ub=1)),
iter = 1000,
refresh = 0)
fit <- brm(Null  ~ 0 + Intercept,
data = data,
family = bernoulli(link = 'probit'),
prior = c(prior(beta(100,100),
lb=0, ub=1)),
iter = 1000,
refresh = 0)
summary(fit)
fit <- brm(Null  ~ 0 + Intercept,
data = data,
family = binomial(link = 'probit'),
prior = c(prior(beta(100,100),
lb=0, ub=1)),
iter = 1000,
refresh = 0)
summary(fit)
fit <- brm(Alternative  ~  0 + Intercept,
data = data,
family = bernoulli(),
prior = c(prior(normal(0.01216648,0.23482174),
coef = Intercept)),
iter = 500,
refresh = 0)
summary(fit)
data
brms::stancode(fit)
fit <- brm(Null  ~ 1,
data = data,
family = binomial(link = 'probit'),
prior = c(prior(beta(100,100),
lb=0, ub=1)),
iter = 1000,
refresh = 0)
summary(fit)
mean(data$Alternative)
curve(dbeta(x, 51,49))
curve(dbeta(x, 50,50))
# Author: Kaleem Ullah
library(rstan)
library(bridgesampling)
rstan_options(auto_write=TRUE)
options(mc.cores=8)
modelFile_null <- 'stan_model.stan'
modelFile_alt <- 'stan_alt.stan'
nIter <- 2000
nChains <- 8
nWarmup <- floor(nIter/2)
nThin <- 1
cat("Estimating", modelFile, "model...\n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulation in Stan...\n")
data = read.csv('data/data.csv')
n = sum(data$Null)
N = length(data$Null)
s = sum(data$Alternative)
S = length(data$Alternative)
dataList_null <- list(n=n, N=N)
dataList_alt <- list(s=s, S=S)
# Stan Fit Null
fit_null <- stan(modelFile_null,
data = dataList_null,
chains = nChains,
iter = nIter,
thin = nThin,
init = "random",
seed = 12560081)
fit_alt <- stan(modelFile_alt,
data = dataList_alt,
chains = nChains,
iter = nIter,
thin = nThin,
init = "random",
seed = 12560081)
cat("Finishing model simulation")
print(Sys.time())
bridge_H0 <- bridge_sampler(fit_null)
bridge_H1 <- bridge_sampler(fit_alt)
print(bf(bridge_H0, bridge_H1))
library(rstan)
library(bridgesampling)
rstan_options(auto_write=TRUE)
options(mc.cores=8)
modelFile_null <- 'stan_model.stan'
modelFile_alt <- 'stan_alt.stan'
nIter <- 2000
nChains <- 8
nWarmup <- floor(nIter/2)
nThin <- 1
cat("Estimating", modelFile, "model...\n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulation in Stan...\n")
data = read.csv('data/data.csv')
setwd("C:/Users/kalee/Desktop/Bachelor's Thesis/R Programming")
# Author: Kaleem Ullah
library(rstan)
library(bridgesampling)
rstan_options(auto_write=TRUE)
options(mc.cores=8)
modelFile_null <- 'stan_model.stan'
modelFile_alt <- 'stan_alt.stan'
nIter <- 2000
nChains <- 8
nWarmup <- floor(nIter/2)
nThin <- 1
cat("Estimating", modelFile, "model...\n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulation in Stan...\n")
data = read.csv('data/data.csv')
n = sum(data$Null)
N = length(data$Null)
s = sum(data$Alternative)
S = length(data$Alternative)
dataList_null <- list(n=n, N=N)
dataList_alt <- list(s=s, S=S)
# Stan Fit Null
fit_null <- stan(modelFile_null,
data = dataList_null,
chains = nChains,
iter = nIter,
thin = nThin,
init = "random",
seed = 12560081)
fit_alt <- stan(modelFile_alt,
data = dataList_alt,
chains = nChains,
iter = nIter,
thin = nThin,
init = "random",
seed = 12560081)
cat("Finishing model simulation")
print(Sys.time())
bridge_H0 <- bridge_sampler(fit_null)
bridge_H1 <- bridge_sampler(fit_alt)
print(bf(bridge_H0, bridge_H1))
install.packages('rstan')
unlink(‘/home/kaleem/R/x86_64-pc-linux-gnu-library/4.2/00LOCK-rstan’)
unlink(‘"home/kaleem/R/x86_64-pc-linux-gnu-library/4.2/00LOCK-rstan")
unlink("home/kaleem/R/x86_64-pc-linux-gnu-library/4.2/00LOCK-rstan")
install.packages('rstan')
install.packages('rstan')
library(rstan)
nIter <- 2000
setwd("/mnt/CA5096D35096C61B/Users/kalee/Desktop/Bachelor's Thesis/R Programming")
# Author: Kaleem Ullah
library(rstan)
library(bridgesampling)
rstan_options(auto_write=TRUE)
options(mc.cores=4)
modelFile_null <- 'stan_models/stan_null.stan'
modelFile_alt <- 'stan_models/stan_alt.stan'
nIter <- 2000
nChains <- 4
nWarmup <- floor(nIter/2)
nThin <- 1
cat("Calling", nChains, "simulation in Stan...\n")
data = read.csv('data/data.csv')
n = sum(data$Null)
N = length(data$Null)
s = sum(data$Alternative)
S = length(data$Alternative)
dataList_null <- list(n=n, N=N)
dataList_alt <- list(s=s, S=S)
# Stan Fit Null
fit_null <- stan(modelFile_null,
data = dataList_null,
chains = nChains,
iter = nIter,
thin = nThin,
init = "random",
seed = 12560081)
fit_alt <- stan(modelFile_alt,
data = dataList_alt,
chains = nChains,
iter = nIter,
thin = nThin,
init = "random",
seed = 12560081)
cat("Finishing model simulation")
endTime = Sys.time(); print(endTime)
print('It took', endTime - startTime)
# there are some divergent iterations even when increasing the HMC tuning parameters as there is too little data to estimate the more complex model
'
model_1   <- stan_model(modelFile_null)
fit_1   <- sampling(object = model_2, data = dataList_null, control = list(adapt_delta = 0.99))
marglik_1 <- bridge_sampler(fit_2)
model_2   <- stan_model(modelFile_alt)
fit_2     <- sampling(object = model_2, data = dataList_alt, control = list(adapt_delta = 0.99))
marglik_2 <- bridge_sampler(fit_2)
# compare the more complex and less complex model
exp(marglik_2$logml - marglik_1$logml)
'
bridge_H0 <- bridge_sampler(fit_null)
bridge_H1 <- bridge_sampler(fit_alt)
print(bf(bridge_H0, bridge_H1))
detach("package:bridgesampling", unload = TRUE)
library(bridgesampling)
fit_alt
fit_null
rstan::get_cppcode()
load("C:/Users/kalee/Desktop/Bachelor's Thesis/R Programming/workspaces/bfda.RData")
install.packages("apaStyle")
install.packages("Rtools")
install.packages("Rtools")
knitr::opts_chunk$set(echo = TRUE)
library(brms)
library(bridgesampling)
library(rstan)
library(ggplot2)
library(ProbBayes)
# Stan Options
rstan_options(auto_write=TRUE)
options(mc.cores=8)
getwd()
data = read.csv('data/data.csv')
data
data
